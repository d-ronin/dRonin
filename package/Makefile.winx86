#
# Windows-specific packaging
#

NSIS_CMD      := makensis.exe
NSIS_OPTS     := /V3
NSIS_DIR      := $(ROOT_DIR)/package/winx86
NSIS_SCRIPT   := $(NSIS_DIR)/dronin.nsi
NSIS_TEMPLATE := $(NSIS_DIR)/dronin.tpl
NSIS_HEADER   := $(PACKAGE_DIR)/$(GCS_PACKAGE_NAME)/dronin.nsh

standalone: gcs
	$(V1) windeployqt -printsupport -concurrent -gui -opengl -xml -quick -quickwidgets -test -script -sql -serialport -multimedia -multimediawidgets --list relative --qmldir $(ROOT_DIR)/build/ground/gcs/share/welcome $(ROOT_DIR)/build/ground/gcs/bin/drgcs.exe 
	$(V1) windeployqt -printsupport -concurrent -gui -opengl -xml -quick -quickwidgets -test -script -sql -serialport -multimedia -multimediawidgets --qmldir $(ROOT_DIR)/build/ground/gcs/share/welcome $(ROOT_DIR)/build/ground/gcs/bin/drgcs.exe 

installer_package: package_ground extract_firmware
	$(V1) mkdir -p "$(dir $(NSIS_HEADER))"
	$(VERSION_CMD) --template="$(NSIS_TEMPLATE)" --outfile="$(NSIS_HEADER)" PACKAGE_LBL="$(PACKAGE_LBL)"
	$(V1) echo "Building Windows installer, please wait..."
	$(V1) echo "If you have a script error in line 1 - use Unicode NSIS 2.46+"
	$(V1) echo "  http://www.scratchpaper.com"
	$(NSIS_CMD) /DPROJECT_ROOT=$(PACKAGE_DIR)/$(GCS_PACKAGE_NAME) /DFIRMWARE_DIR=$(PACKAGE_DIR)/firmware /DSOURCE_ROOT=$(ROOT_DIR) $(NSIS_SCRIPT)  $(NSIS_OPTS)

ground_package_os_specific: ground_package_common
	@echo $@ starting
	$(V1)cp -v $(NSIS_DIR)/makeShortcut.vbs $(PACKAGE_DIR)/$(GCS_PACKAGE_NAME)/bin
	$(V1)cp -v $(NSIS_DIR)/createShortcut.bat $(PACKAGE_DIR)/$(GCS_PACKAGE_NAME)
ifeq ($(USE_MSVC), YES)
	$(V1)cp -v "$(VCREDIST)/msvcp120.dll" $(PACKAGE_DIR)/$(GCS_PACKAGE_NAME)/bin
	$(V1)cp -v "$(VCREDIST)/msvcr120.dll" $(PACKAGE_DIR)/$(GCS_PACKAGE_NAME)/bin
	$(V1)cp -v "$(VCREDIST)/vccorlib120.dll" $(PACKAGE_DIR)/$(GCS_PACKAGE_NAME)/bin
endif
	$(V1)find $(PACKAGE_DIR)/$(GCS_PACKAGE_NAME) -type f -name "*.lib" -exec rm -f {} \;
	$(V1)find $(PACKAGE_DIR)/$(GCS_PACKAGE_NAME) -type f -name "*.exp" -exec rm -f {} \;

gcs:
	$(V1) $(MAKE) -C $(ROOT_DIR) GCS_BUILD_CONF=release $@

package_all_compress: package_all
	$(V1)cd $(PACKAGE_DIR)/../ && $(ZIPBIN) -r --exclude=*.zip $(BUILD_DIR)/$(PACKAGE_LBL) $(notdir $(PACKAGE_DIR))

.PHONY: standalone
.PHONY: package_ground_compress package_matlab_compress
